version: "3.9"
services:
  llm-server:
    restart: unless-stopped
    build:
      context: ./llm-server
      dockerfile: Dockerfile
      target: ${TARGET}
    image: codebanesr/llm-server:latest
    volumes:
      - ./llm-server:/app
      - shared_data:/app/shared_data
    networks:
      - opencopilot-net
    env_file:
      - llm-server/.env
    ports:
      - 8002
      - 5678
    depends_on:
      mysql:
        condition: service_healthy
      qdrant:
        condition: service_started

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - opencopilot-net

  workers:
    restart: unless-stopped
    build:
      context: ./llm-server
      dockerfile: worker.Dockerfile
    image: codebanesr/workers:latest  # Add this line
    deploy:
      replicas: 1
    networks:
      - opencopilot-net
    volumes:
      - shared_data:/app/shared_data
    env_file:
      - llm-server/.env
    # worker will also check for some database tables, this is a hacky solution
    command: sh -c "celery -A celery_app worker --loglevel=info"
    depends_on:
      mysql:
        condition: service_healthy
      qdrant:
        condition: service_started

  dashboard:
    restart: unless-stopped
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    image: codebanesr/dashboard:latest  # Add this line
    ports:
      - 8000:8000
    volumes:
      - shared_data:/app/shared_data
    networks:
      - opencopilot-net
    depends_on:
      - llm-server

  mysql:
    restart: unless-stopped
    platform: linux/arm64
    image: "mysql:oraclelinux8"
    ports:
      - "3307:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: opencopilot
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpass
    volumes:
      - database:/var/lib/mysql
    networks:
      - opencopilot-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - opencopilot-net


  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - "8888:80"
    volumes:
      - ./container_config/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - opencopilot-net
    depends_on:
      mysql:
        condition: service_healthy
      dashboard:
        condition: service_started
      llm-server:
        condition: service_started

networks:
  opencopilot-net:
    name: opencopilot-net

volumes:
  shared_data:
  database:
  qdrant_storage:
  redis_data: